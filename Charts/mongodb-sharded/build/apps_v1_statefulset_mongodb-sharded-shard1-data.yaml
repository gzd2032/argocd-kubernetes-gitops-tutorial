apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: shardsvr
    app.kubernetes.io/instance: mongodb-sharded
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb-sharded
    app.kubernetes.io/version: 7.0.9
    helm.sh/chart: mongodb-sharded-8.0.8
  name: mongodb-sharded-shard1-data
  namespace: mongo-sharded
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: shardsvr
      app.kubernetes.io/instance: mongodb-sharded
      app.kubernetes.io/name: mongodb-sharded
  serviceName: mongodb-sharded-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/component: shardsvr
        app.kubernetes.io/instance: mongodb-sharded
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mongodb-sharded
        app.kubernetes.io/version: 7.0.9
        helm.sh/chart: mongodb-sharded-8.0.8
        shard: "1"
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: shardsvr
                  app.kubernetes.io/instance: mongodb-sharded
                  app.kubernetes.io/name: mongodb-sharded
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - command:
        - /bin/bash
        - /entrypoint/replicaset-entrypoint.sh
        env:
        - name: MONGODB_ENABLE_NUMACTL
          value: "no"
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MONGODB_SYSTEM_LOG_VERBOSITY
          value: "0"
        - name: MONGODB_INIT_RETRY_ATTEMPTS
          value: "24"
        - name: MONGODB_INIT_RETRY_DELAY
          value: "5"
        - name: MONGODB_DISABLE_SYSTEM_LOG
          value: "no"
        - name: MONGODB_PORT_NUMBER
          value: "27017"
        - name: MONGODB_SHARDING_MODE
          value: shardsvr
        - name: MONGODB_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MONGODB_MONGOS_HOST
          value: mongodb-sharded
        - name: MONGODB_MONGOS_PORT_NUMBER
          value: "27017"
        - name: MONGODB_INITIAL_PRIMARY_HOST
          value: mongodb-sharded-shard1-data-0.mongodb-sharded-headless.mongo-sharded.svc.cluster.local
        - name: MONGODB_REPLICA_SET_NAME
          value: mongodb-sharded-shard-1
        - name: MONGODB_ADVERTISED_HOSTNAME
          value: $(MONGODB_POD_NAME).mongodb-sharded-headless.mongo-sharded.svc.cluster.local
        - name: MONGODB_ROOT_USER
          value: root
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongodb-sharded
        - name: MONGODB_REPLICA_SET_KEY
          valueFrom:
            secretKeyRef:
              key: mongodb-replica-set-key
              name: mongodb-sharded
        - name: MONGODB_ENABLE_IPV6
          value: "no"
        - name: MONGODB_ENABLE_DIRECTORY_PER_DB
          value: "no"
        image: docker.io/bitnami/mongodb-sharded:8.0.9-debian-12-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - pgrep
            - mongod
          failureThreshold: 2
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 20
        name: mongodb
        ports:
        - containerPort: 27017
          name: mongodb
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - mongosh --port $MONGODB_PORT_NUMBER --eval "db.adminCommand('ping')"
          failureThreshold: 6
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 20
        resources:
          limits:
            cpu: 750m
            ephemeral-storage: 1024Mi
            memory: 1536Mi
          requests:
            cpu: 500m
            ephemeral-storage: 50Mi
            memory: 1024Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /opt/bitnami/mongodb/conf
          name: empty-dir
          subPath: app-conf-dir
        - mountPath: /opt/bitnami/mongodb/tmp
          name: empty-dir
          subPath: app-tmp-dir
        - mountPath: /opt/bitnami/mongodb/logs
          name: empty-dir
          subPath: app-logs-dir
        - mountPath: /.mongodb
          name: empty-dir
          subPath: app-mongosh-dir
        - mountPath: /entrypoint
          name: replicaset-entrypoint-configmap
        - mountPath: /bitnami/mongodb
          name: datadir
      initContainers: null
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: mongodb-sharded-shardsvr
      volumes:
      - emptyDir: {}
        name: empty-dir
      - configMap:
          name: mongodb-sharded-replicaset-entrypoint
        name: replicaset-entrypoint-configmap
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
